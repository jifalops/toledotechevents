// GENERATED CONTENT, CHANGES WILL BE LOST.
@import 'package:angular_components/css/material/material';

//
// Theme maps.
//
$themes: (
  // Light theme.
light: (
  // Colors.
  primaryColor: rgba(12, 73, 100, 1.0),
  primaryColorLight: rgba(67, 116, 146, 1.0),
  primaryColorDark: rgba(0, 34, 58, 1.0),
  secondaryColor: rgba(141, 198, 65, 1.0),
  secondaryColorLight: rgba(192, 249, 114, 1.0),
  secondaryColorDark: rgba(91, 149, 2, 1.0),
  backgroundColor: rgba(254, 254, 254, 1.0),
  surfaceColor: rgba(254, 254, 254, 1.0),
  dividerColor: rgba(238, 238, 238, 1.0),
  errorColor: rgba(176, 0, 32, 1.0),
  onPrimaryColor: rgba(255, 255, 255, 1.0),
  onPrimaryColorLight: rgba(255, 255, 255, 1.0),
  onPrimaryColorDark: rgba(255, 255, 255, 1.0),
  onSecondaryColor: rgba(0, 0, 0, 1.0),
  onSecondaryColorLight: rgba(0, 0, 0, 1.0),
  onSecondaryColorDark: rgba(255, 255, 255, 1.0),
  onBackgroundColor: rgba(0, 0, 0, 0.8666666666666667),
  onSurfaceColor: rgba(0, 0, 0, 0.8666666666666667),
  onErrorColor: rgba(255, 255, 255, 1.0),
  primaryButtonColor: rgba(91, 149, 2, 1.0),
  secondaryButtonColor: rgba(12, 73, 100, 1.0),
  onPrimaryButtonColor: rgba(255, 255, 255, 1.0),
  onSecondaryButtonColor: rgba(255, 255, 255, 1.0),
  // Fonts.
  display4: (
  font:  100 112.0px/1.0 Roboto,
  text-decoration: inherit,
  color: rgba(0, 0, 0, 0.5411764705882353)
),
  display3: (
  font:  100 112.0px/1.0 Roboto,
  text-decoration: inherit,
  color: rgba(0, 0, 0, 0.5411764705882353)
),
  display2: (
  font:  100 112.0px/1.0 Roboto,
  text-decoration: inherit,
  color: rgba(0, 0, 0, 0.5411764705882353)
),
  display1: (
  font:  100 112.0px/1.0 Roboto,
  text-decoration: inherit,
  color: rgba(0, 0, 0, 0.5411764705882353)
),
  headline: (
  font:  700 24.0px/2.5 Ubuntu,
  text-decoration: inherit,
  color: rgba(0, 0, 0, 0.8666666666666667)
),
  title: (
  font:  700 20.0px/1.0 Ubuntu,
  text-decoration: inherit,
  color: rgba(0, 0, 0, 0.8666666666666667)
),
  subhead: (
  font:  300 18.0px/1.75 Ubuntu,
  text-decoration: inherit,
  color: rgba(0, 0, 0, 0.8666666666666667)
),
  body2: (
  font:  600 18.0px/1.0 Open Sans,
  text-decoration: inherit,
  color: rgba(12, 73, 100, 1.0)
),
  body1: (
  font:  400 16.0px/1.15 Open Sans,
  text-decoration: inherit,
  color: rgba(0, 0, 0, 0.8666666666666667)
),
  caption: (
  font:  400 16.0px/1.0 Open Sans,
  text-decoration: inherit,
  color: rgba(0, 0, 0, 0.5411764705882353)
),
  button: (
  font:  500 14.0px/1.0 Open Sans,
  text-decoration: inherit,
  color: rgba(0, 0, 0, 0.8666666666666667)
),
  // Other.
  brightness: light,
  inputTheme: outline,
  buttonCornerRadius: 4.0px,
),

// Dark theme.
dark: (
  // Colors.
  primaryColor: rgba(12, 73, 100, 1.0),
  primaryColorLight: rgba(67, 116, 146, 1.0),
  primaryColorDark: rgba(0, 34, 58, 1.0),
  secondaryColor: rgba(141, 198, 65, 1.0),
  secondaryColorLight: rgba(192, 249, 114, 1.0),
  secondaryColorDark: rgba(91, 149, 2, 1.0),
  backgroundColor: rgba(51, 51, 51, 1.0),
  surfaceColor: rgba(51, 51, 51, 1.0),
  dividerColor: rgba(72, 72, 72, 1.0),
  errorColor: rgba(176, 0, 32, 1.0),
  onPrimaryColor: rgba(255, 255, 255, 1.0),
  onPrimaryColorLight: rgba(255, 255, 255, 1.0),
  onPrimaryColorDark: rgba(255, 255, 255, 1.0),
  onSecondaryColor: rgba(0, 0, 0, 1.0),
  onSecondaryColorLight: rgba(0, 0, 0, 1.0),
  onSecondaryColorDark: rgba(255, 255, 255, 1.0),
  onBackgroundColor: rgba(255, 255, 255, 1.0),
  onSurfaceColor: rgba(255, 255, 255, 1.0),
  onErrorColor: rgba(255, 255, 255, 1.0),
  primaryButtonColor: rgba(91, 149, 2, 1.0),
  secondaryButtonColor: rgba(12, 73, 100, 1.0),
  onPrimaryButtonColor: rgba(255, 255, 255, 1.0),
  onSecondaryButtonColor: rgba(255, 255, 255, 1.0),
  // Fonts.
  display4: (
  font:  100 112.0px/1.0 Roboto,
  text-decoration: inherit,
  color: rgba(255, 255, 255, 0.7019607843137254)
),
  display3: (
  font:  100 112.0px/1.0 Roboto,
  text-decoration: inherit,
  color: rgba(255, 255, 255, 0.7019607843137254)
),
  display2: (
  font:  100 112.0px/1.0 Roboto,
  text-decoration: inherit,
  color: rgba(255, 255, 255, 0.7019607843137254)
),
  display1: (
  font:  100 112.0px/1.0 Roboto,
  text-decoration: inherit,
  color: rgba(255, 255, 255, 0.7019607843137254)
),
  headline: (
  font:  700 24.0px/2.5 Ubuntu,
  text-decoration: inherit,
  color: rgba(255, 255, 255, 1.0)
),
  title: (
  font:  500 20.0px/1.0 Roboto,
  text-decoration: inherit,
  color: rgba(0, 0, 0, 0.8666666666666667)
),
  subhead: (
  font:  300 18.0px/1.75 Ubuntu,
  text-decoration: inherit,
  color: rgba(255, 255, 255, 1.0)
),
  body2: (
  font:  600 18.0px/1.0 Open Sans,
  text-decoration: inherit,
  color: rgba(12, 73, 100, 1.0)
),
  body1: (
  font:  400 16.0px/1.15 Open Sans,
  text-decoration: inherit,
  color: rgba(255, 255, 255, 1.0)
),
  caption: (
  font:  400 16.0px/1.0 Open Sans,
  text-decoration: inherit,
  color: rgba(255, 255, 255, 0.7019607843137254)
),
  button: (
  font:  500 14.0px/1.0 Open Sans,
  text-decoration: inherit,
  color: rgba(255, 255, 255, 1.0)
),
  // Other.
  brightness: dark,
  inputTheme: outline,
  buttonCornerRadius: 4.0px,
),


);

//
// Themify utility
//
// See https://medium.com/@dmitriy.borodiy/easy-color-theming-with-scss-bc38fd5734d1

@mixin themify {
  @each $theme, $map in $themes {
    .theme-#{$theme} & {
      $theme-map: () !global;
      @each $key, $submap in $map {
        $value: map-get(map-get($themes, $theme), '#{$key}');
        $theme-map: map-merge($theme-map, ($key: $value)) !global;
      }
      @content;
      $theme-map: null !global;
    }
  }
}

// Get a theme variable arbitrarily deep in the $theme-map.
// <key1>, [key2, key3, ...]
@function themed($keys...) {
  $map: $theme-map;
  @each $key in $keys {
    $map: map-get($map, $key);
  }
  @return $map;
}


//
// Font faces
//

@font-face {
  font-family: 'Open Sans';
  src: url('packages/toledotechevents/assets/fonts/OpenSans-Regular.ttf') format('truetype');
}
@font-face {
  font-family: 'Open Sans';
  font-weight: 500;
  src: url('packages/toledotechevents/assets/fonts/OpenSans-SemiBold.ttf') format('truetype');
}
@font-face {
  font-family: 'Open Sans';
  font-weight: 300;
  src: url('packages/toledotechevents/assets/fonts/OpenSans-Light.ttf') format('truetype');
}
@font-face {
  font-family: 'Open Sans';
  font-weight: 700;
  src: url('packages/toledotechevents/assets/fonts/OpenSans-Bold.ttf') format('truetype');
}
@font-face {
  font-family: 'Open Sans';
  font-style: italic;
  src: url('packages/toledotechevents/assets/fonts/OpenSans-Italic.ttf') format('truetype');
}
@font-face {
  font-family: 'Ubuntu';
  src: url('packages/toledotechevents/assets/fonts/Ubuntu-Regular.ttf') format('truetype');
}
@font-face {
  font-family: 'Ubuntu';
  font-weight: 300;
  src: url('packages/toledotechevents/assets/fonts/Ubuntu-Light.ttf') format('truetype');
}
@font-face {
  font-family: 'Ubuntu';
  font-weight: 700;
  src: url('packages/toledotechevents/assets/fonts/Ubuntu-Bold.ttf') format('truetype');
}

//
// Color mixins.
//

@mixin primary-color {
  @include themify {
    background-color: themed('primaryColor');
    color: themed('onPrimaryColor');
  }
}
@mixin primary-color-light {
  @include themify {
    background-color: themed('primaryColorLight');
    color: themed('onPrimaryColorLight');
  }
}
@mixin primary-color-dark {
  @include themify {
    background-color: themed('primaryColorDark');
    color: themed('onPrimaryColorDark');
  }
}
@mixin secondary-color {
  @include themify {
    background-color: themed('secondaryColor');
    color: themed('onSecondaryColor');
  }
}
@mixin secondary-color-light {
  @include themify {
    background-color: themed('secondaryColorLight');
    color: themed('onSecondaryColorLight');
  }
}
@mixin secondary-color-dark {
  @include themify {
    background-color: themed('secondaryColorDark');
    color: themed('onSecondaryColorDark');
  }
}
@mixin background-color {
  @include themify {
    background-color: themed('backgroundColor');
    color: themed('onBackgroundColor');
  }
}
@mixin surface-color {
  @include themify {
    background-color: themed('surfaceColor');
    color: themed('onSurfaceColor');
  }
}
@mixin error {
  @include themify {
    background-color: themed('errorColor');
    color: themed('onErrorColor');
  }
}
@mixin divider {
  @include themify {
    background-color: themed('dividerColor');
  }
}

//
// Font mixins
//

@mixin font-display4 {
  @include themify {
    font: themed('display4', 'font');
    text-decoration: themed('display4', 'text-decoration');
    color: themed('display4', 'color');
  }
}

@mixin font-display3 {
  @include themify {
    font: themed('display3', 'font');
    text-decoration: themed('display3', 'text-decoration');
    color: themed('display3', 'color');
  }
}

@mixin font-display2 {
  @include themify {
    font: themed('display2', 'font');
    text-decoration: themed('display2', 'text-decoration');
    color: themed('display2', 'color');
  }
}

@mixin font-display1 {
  @include themify {
    font: themed('display1', 'font');
    text-decoration: themed('display1', 'text-decoration');
    color: themed('display1', 'color');
  }
}

@mixin font-headline {
  @include themify {
    font: themed('headline', 'font');
    text-decoration: themed('headline', 'text-decoration');
    color: themed('headline', 'color');
  }
}

@mixin font-title {
  @include themify {
    font: themed('title', 'font');
    text-decoration: themed('title', 'text-decoration');
    color: themed('title', 'color');
  }
}

@mixin font-subhead {
  @include themify {
    font: themed('subhead', 'font');
    text-decoration: themed('subhead', 'text-decoration');
    color: themed('subhead', 'color');
  }
}

@mixin font-body2 {
  @include themify {
    font: themed('body2', 'font');
    text-decoration: themed('body2', 'text-decoration');
    color: themed('body2', 'color');
  }
}

@mixin font-body1 {
  @include themify {
    font: themed('body1', 'font');
    text-decoration: themed('body1', 'text-decoration');
    color: themed('body1', 'color');
  }
}

@mixin font-caption {
  @include themify {
    font: themed('caption', 'font');
    text-decoration: themed('caption', 'text-decoration');
    color: themed('caption', 'color');
  }
}

@mixin font-button {
  @include themify {
    font: themed('button', 'font');
    text-decoration: themed('button', 'text-decoration');
    color: themed('button', 'color');
    border-radius: themed('buttonCornerRadius');
  }
}

// Other

@mixin primary-button {
  @include themify {
    font: themed('button', 'font');
    font-size: 16px;
    text-decoration: themed('button', 'text-decoration');
    background-color: themed('primaryButtonColor');
    color: themed('onPrimaryButtonColor');
    border-radius: themed('buttonCornerRadius');
  }
  padding: 4px 8px;
}

@mixin secondary-button {
  @include themify {
    font: themed('button', 'font');
    font-size: 16px;
    text-decoration: themed('button', 'text-decoration');
    background-color: themed('secondaryButtonColor');
    color: themed('onSecondaryButtonColor');
    border-radius: themed('buttonCornerRadius');
  }
  padding: 4px 8px;
}
